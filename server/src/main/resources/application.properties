#region DB
spring.datasource.url=jdbc:postgresql://127.0.0.1/gmsboilerplatesbng
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
#endregion

#region Error Handling
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false
#endregion

#region Security

#region JWT

#region General
#Make sure this is a strong secret. A good one may be found at https://www.grc.com/passwords.htm, https://strongpasswordgenerator.com, https://passwordsgenerator.net/
gms.security.jwt.secret=OIwOG02p4f8UyfqAwEAHnKaEjpwQMyBqO9cmvp70d6P9nbuNbF6c0WQwlYBjWjb
gms.security.jwt.issued_time_holder=issued_at
gms.security.jwt.expiration_time_holder=expiration_time
gms.security.jwt.expires_in_holder=expires_in
gms.security.jwt.authorities_holder=authorities
gms.security.jwt.issuer=www.gms.com
#endregion

#region Access Token
# ... a positive long(https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html) value in seconds (1 day by default)
gms.security.jwt.token_expiration=86400
gms.security.jwt.token_type_holder=token_type
# ... as per https://tools.ietf.org/html/rfc6750, gms.security.jwt.token_holder and gms.security.jwt.token_type properties should not be customised.
gms.security.jwt.token_type=Bearer
gms.security.jwt.token_holder=access_token
gms.security.jwt.token_header=Authorization
gms.security.jwt.token_header_to_be_sent_holder=header_to_be_sent
#endregion

#endregion

#region Sign-Up/Sign-In/Sign-Out
gms.security.sign_up_url=/sign-up
gms.security.sign_in_url=/login
gms.security.sign_out_url=/logout
#endregion

#endregion

#region Config
spring.data.rest.basePath=/api
spring.application.name=GMSBoilerplate_SB-NG
#endregion


# Includes
spring.profiles.include=misc,vars,initial

# Active profile (development, test, production): change for required env
spring.profiles.active=development